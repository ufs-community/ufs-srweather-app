default_task_verify_det: &default_task_verify_det
  account: '&ACCOUNT;'
  attrs: &default_attrs
    cycledefs: forecast
    maxtries: '1'
  envars: &default_vars
    GLOBAL_VAR_DEFNS_FP: '&GLOBAL_VAR_DEFNS_FP;'
    USHdir: '&USHdir;'
    PDY: !cycstr '@Y@m@d'
    cyc: !cycstr "@H"
    subcyc: !cycstr "@M"
    LOGDIR: !cycstr "&LOGDIR;"
    nprocs: '{{ parent.nnodes * parent.ppn }}'
  join: !cycstr '&LOGDIR;/{{ jobname }}_@Y@m@d@H&LOGEXT;'
  memory: '{% if user.MACHINE not in ["NOAACLOUD"] %}{{ "2G" }}{% endif %}'
  native: '{{ platform.SCHED_NATIVE_CMD }}'
  nnodes: 1
  nodes: '{{ nnodes }}:ppn={{ ppn }}'
  partition: '{% if platform.get("PARTITION_DEFAULT") %}&PARTITION_DEFAULT;{% else %}None{% endif %}'
  ppn: 1
  queue: '&QUEUE_DEFAULT;'
  walltime: 00:30:00

metatask_GridStat_CCPA_all_accums_all_mems:
  var:
    ACCUM_HH: '{% for ah in verification.VX_APCP_ACCUMS_HRS %}{% if workflow.FCST_LEN_HRS >= ah %}{{ "%02d " % ah }}{% endif %}{% endfor %}'
  metatask_GridStat_CCPA_APCP#ACCUM_HH#h_all_mems:
    var:
      mem: '{% if global.DO_ENSEMBLE %}{% for m in range(1, global.NUM_ENS_MEMBERS+1) %}{{ "%03d "%m }}{%- endfor -%} {% else %}{{ "000"|string }}{% endif %}'
    task_run_MET_GridStat_vx_APCP#ACCUM_HH#h_mem#mem#:
      <<: *default_task_verify_det
      attrs:
        <<: *default_attrs
        maxtries: '2'
      command: '&LOAD_MODULES_RUN_TASK; "run_vx" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_OR_POINTSTAT_VX"'
      envars:
        <<: *default_vars
        OBS_DIR: '&CCPA_OBS_DIR;'
        VAR: APCP
        ACCUM_HH: '#ACCUM_HH#'
        METPLUSTOOLNAME: 'GRIDSTAT'
        OBTYPE: 'CCPA'
        ENSMEM_INDX: "#mem#"
        SLASH_ENSMEM_SUBDIR_OR_NULL: '{% if global.DO_ENSEMBLE %}{{ "/mem#mem#" }}{% endif %}'
        OBS_AVAIL_INTVL_HRS: '{{- verification.CCPA_OBS_AVAIL_INTVL_HRS }}'
        FCST_LEVEL: 'A#ACCUM_HH#'
        FCST_THRESH: 'all'
      walltime: 02:00:00
      dependency:
        and:
          taskdep_pcpcombine_obs:
            attrs:
              task: run_MET_PcpCombine_obs_APCP#ACCUM_HH#h_CCPA
          taskdep_pcpcombine_fcst:
            attrs:
              task: run_MET_PcpCombine_fcst_APCP#ACCUM_HH#h_mem#mem#

metatask_GridStat_NOHRSC_all_accums_all_mems:
  var:
    ACCUM_HH: '{% for ah in verification.VX_ASNOW_ACCUMS_HRS %}{% if workflow.FCST_LEN_HRS >= ah %}{{ "%02d " % ah }}{% endif %}{% endfor %}'
  metatask_GridStat_NOHRSC_ASNOW#ACCUM_HH#h_all_mems:
    var:
      mem: '{% if global.DO_ENSEMBLE %}{% for m in range(1, global.NUM_ENS_MEMBERS+1) %}{{ "%03d "%m }}{%- endfor -%} {% else %}{{ "000"|string }}{% endif %}'
    task_run_MET_GridStat_vx_ASNOW#ACCUM_HH#h_mem#mem#:
      <<: *default_task_verify_det
      attrs:
        <<: *default_attrs
        maxtries: '2'
      command: '&LOAD_MODULES_RUN_TASK; "run_vx" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_OR_POINTSTAT_VX"'
      envars:
        <<: *default_vars
        OBS_DIR: '&NOHRSC_OBS_DIR;'
        VAR: ASNOW
        ACCUM_HH: '#ACCUM_HH#'
        METPLUSTOOLNAME: 'GRIDSTAT'
        OBTYPE: 'NOHRSC'
        ENSMEM_INDX: "#mem#"
        SLASH_ENSMEM_SUBDIR_OR_NULL: '{% if global.DO_ENSEMBLE %}{{ "/mem#mem#" }}{% endif %}'
        OBS_AVAIL_INTVL_HRS: '{{- verification.NOHRSC_OBS_AVAIL_INTVL_HRS }}'
        FCST_LEVEL: 'A#ACCUM_HH#'
        FCST_THRESH: 'all'
      walltime: 02:00:00
      dependency:
        and:
          taskdep_pcpcombine_obs:
            attrs:
              task: run_MET_PcpCombine_obs_ASNOW#ACCUM_HH#h_NOHRSC
          taskdep_pcpcombine_fcst:
            attrs:
              task: run_MET_PcpCombine_fcst_ASNOW#ACCUM_HH#h_mem#mem#

metatask_GridStat_MRMS_all_mems:
  var:
    mem: '{% if global.DO_ENSEMBLE %}{% for m in range(1, global.NUM_ENS_MEMBERS+1) %}{{ "%03d "%m }}{%- endfor -%} {% else %}{{ "000"|string }}{% endif %}'
  metatask_GridStat_MRMS_mem#mem#:
    var:
      VAR: '{% for var in verification.VX_FIELDS %}{% if var in ["REFC", "RETOP"] %}{{ "%s " % var }}{% endif %}{% endfor %}'
    task_run_MET_GridStat_vx_#VAR#_mem#mem#:
      <<: *default_task_verify_det
      command: '&LOAD_MODULES_RUN_TASK; "run_vx" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_OR_POINTSTAT_VX"'
      envars:
        <<: *default_vars
        OBS_DIR: '&MRMS_OBS_DIR;'
        VAR: '#VAR#'
        METPLUSTOOLNAME: 'GRIDSTAT'
        OBTYPE: 'MRMS'
        ENSMEM_INDX: "#mem#"
        SLASH_ENSMEM_SUBDIR_OR_NULL: '{% if global.DO_ENSEMBLE %}{{ "/mem#mem#" }}{% endif %}'
        OBS_AVAIL_INTVL_HRS: '{{- verification.MRMS_OBS_AVAIL_INTVL_HRS }}'
        FCST_LEVEL: 'L0'
        FCST_THRESH: 'all'
      walltime: 02:00:00
      dependency:
        and:
          datadep_all_get_obs_mrms_complete:
            attrs:
              age: 00:00:00:30
            # Check that the flag files that indicate that the get_obs_mrms tasks
            # are complete are all present before launching any GridStat task.
            text: '{%- set num_obs_days = workflow.OBS_DAYS_ALL_CYCLES_INST|length %}
                   {%- set indent = "      " %}
                   {%- set indent_p2 = indent + "  " %}
                   {%- for n in range(0, num_obs_days) %}
                     {%- set yyyymmdd = workflow.OBS_DAYS_ALL_CYCLES_INST[n] %}
                     {%- if n == 0 %}
                       {{- workflow.WFLOW_FLAG_FILES_DIR ~ "/get_obs_mrms_" ~ yyyymmdd ~ "_complete.txt" }}
                     {%- else %}
                       {{- indent ~ "</datadep>\n" }}
                       {{- indent ~ "<datadep age=\"00:00:00:30\">\n" }}
                       {{- indent_p2 ~ workflow.WFLOW_FLAG_FILES_DIR ~ "/get_obs_mrms_" ~ yyyymmdd ~ "_complete.txt" }}
                     {%- endif %}
                     {%- if n != num_obs_days-1 %} {{- "\n" }} {%- endif %}
                   {%- endfor %}'
          datadep_post_files_exist:
            attrs:
              age: 00:00:00:30
            text: !cycstr '{{ workflow.EXPTDIR }}/@Y@m@d@H/post_files_exist_mem#mem#.txt'

metatask_PointStat_NDAS_all_mems:
  var:
    mem: '{% if global.DO_ENSEMBLE %}{% for m in range(1, global.NUM_ENS_MEMBERS+1) %}{{ "%03d "%m }}{%- endfor -%} {% else %}{{ "000"|string }}{% endif %}'
  metatask_PointStat_NDAS_mem#mem#:
    var:
      VAR: '{% for var in verification.VX_FIELDS %}{% if var in ["ADPSFC", "ADPUPA"] %}{{ "%s " % var }}{% endif %}{% endfor %}'
    task_run_MET_PointStat_vx_#VAR#_mem#mem#:
      <<: *default_task_verify_det
      command: '&LOAD_MODULES_RUN_TASK; "run_vx" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_OR_POINTSTAT_VX"'
      envars:
        <<: *default_vars
        OBS_DIR: '&NDAS_OBS_DIR;'
        VAR: '#VAR#'
        METPLUSTOOLNAME: 'POINTSTAT'
        OBTYPE: 'NDAS'
        ENSMEM_INDX: "#mem#"
        SLASH_ENSMEM_SUBDIR_OR_NULL: '{% if global.DO_ENSEMBLE %}{{ "/mem#mem#" }}{% endif %}'
        OBS_AVAIL_INTVL_HRS: '{{- verification.NDAS_OBS_AVAIL_INTVL_HRS }}'
        FCST_LEVEL: 'all'
        FCST_THRESH: 'all'
      walltime: 01:00:00
      dependency:
        and:
          datadep_all_pb2nc_obs_ndas_complete:
            attrs:
              age: 00:00:00:30
            # Check that the flag files that indicate that the Pb2NC tasks are
            # complete are all present before launching any PointStat task.
            text: '{%- set num_obs_days = workflow.OBS_DAYS_ALL_CYCLES_INST|length %}
                   {%- set indent = "      " %}
                   {%- set indent_p2 = indent + "  " %}
                   {%- for n in range(0, num_obs_days) %}
                     {%- set yyyymmdd = workflow.OBS_DAYS_ALL_CYCLES_INST[n] %}
                     {%- if n == 0 %}
                       {{- workflow.WFLOW_FLAG_FILES_DIR ~ "/run_met_pb2nc_obs_ndas_" ~ yyyymmdd ~ "_complete.txt" }}
                     {%- else %}
                       {{- indent ~ "</datadep>\n" }}
                       {{- indent ~ "<datadep age=\"00:00:00:30\">\n" }}
                       {{- indent_p2 ~ workflow.WFLOW_FLAG_FILES_DIR ~ "/run_met_pb2nc_obs_ndas_" ~ yyyymmdd ~ "_complete.txt" }}
                     {%- endif %}
                     {%- if n != num_obs_days-1 %} {{- "\n" }} {%- endif %}
                   {%- endfor %}'
          datadep_post_files_exist:
            attrs:
              age: 00:00:00:30
            text: !cycstr '{{ workflow.EXPTDIR }}/@Y@m@d@H/post_files_exist_mem#mem#.txt'
