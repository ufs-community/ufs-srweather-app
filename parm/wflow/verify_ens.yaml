default_task_verify_ens: &default_task_verify_ens
  account: '&ACCOUNT;'
  attrs:
    cycledefs: forecast
    maxtries: '2'
  envars: &default_vars
    GLOBAL_VAR_DEFNS_FP: '&GLOBAL_VAR_DEFNS_FP;'
    USHdir: '&USHdir;'
    PDY: !cycstr '@Y@m@d'
    cyc: !cycstr "@H"
    subcyc: !cycstr "@M"
    LOGDIR: !cycstr "&LOGDIR;"
    nprocs: '{{ parent.nnodes * parent.ppn }}'
  join: !cycstr '&LOGDIR;/{{ jobname }}_@Y@m@d@H&LOGEXT;'
  memory: '{% if user.MACHINE not in ["WCOSS2", "NOAACLOUD"] %}{{ "2G" }}{% endif %}'
  native: '{{ platform.SCHED_NATIVE_CMD }}'
  nnodes: 1
  nodes: '{{ nnodes }}:ppn={{ ppn }}'
  partition: '{% if platform.get("PARTITION_DEFAULT") %}&PARTITION_DEFAULT;{% else %}None{% endif %}'
  ppn: 1
  queue: '&QUEUE_DEFAULT;'
  walltime: 01:00:00

metatask_GenEnsProd_EnsembleStat_CCPA:
  var:
    ACCUM_HH: '{% for ah in verification.VX_APCP_ACCUMS_HRS %}{% if workflow.FCST_LEN_HRS >= ah %}{{ "%02d " % ah }}{% endif %}{% endfor %}'
  task_run_MET_GenEnsProd_vx_APCP#ACCUM_HH#h: &task_GenEnsProd_CCPA
    <<: *default_task_verify_ens
    command: '&LOAD_MODULES_RUN_TASK; "run_vx" "&JOBSdir;/JREGIONAL_RUN_MET_GENENSPROD_OR_ENSEMBLESTAT"'
    envars: &envars_GenEnsProd_CCPA
      <<: *default_vars
      ACCUM_HH: '#ACCUM_HH#'
      OBS_DIR: '&CCPA_OBS_DIR;'
      VAR: APCP
      METPLUSTOOLNAME: 'GENENSPROD'
      OBTYPE: 'CCPA'
      FCST_LEVEL: 'A#ACCUM_HH#'
      FCST_THRESH: 'all'
    dependency:
      metataskdep_pcpcombine_fcst:
        attrs:
          metatask: PcpCombine_fcst_APCP#ACCUM_HH#h_all_mems
  task_run_MET_EnsembleStat_vx_APCP#ACCUM_HH#h:
    <<: *task_GenEnsProd_CCPA
    envars:
      <<: *envars_GenEnsProd_CCPA
      METPLUSTOOLNAME: 'ENSEMBLESTAT'
      FCST_THRESH: 'none'
    dependency:
      and:
        taskdep_pcpcombine_obs_ccpa: &taskdep_pcpcombine_obs_ccpa
          attrs:
            task: run_MET_PcpCombine_obs_APCP#ACCUM_HH#h_CCPA
        taskdep_genensprod:
          attrs:
            task: run_MET_GenEnsProd_vx_APCP#ACCUM_HH#h

metatask_GenEnsProd_EnsembleStat_NOHRSC:
  var:
    ACCUM_HH: '{% for ah in verification.VX_ASNOW_ACCUMS_HRS %}{% if workflow.FCST_LEN_HRS >= ah %}{{ "%02d " % ah }}{% endif %}{% endfor %}'
  task_run_MET_GenEnsProd_vx_ASNOW#ACCUM_HH#h: &task_GenEnsProd_NOHRSC
    <<: *default_task_verify_ens
    command: '&LOAD_MODULES_RUN_TASK; "run_vx" "&JOBSdir;/JREGIONAL_RUN_MET_GENENSPROD_OR_ENSEMBLESTAT"'
    envars: &envars_GenEnsProd_NOHRSC
      <<: *default_vars
      ACCUM_HH: '#ACCUM_HH#'
      OBS_DIR: '&NOHRSC_OBS_DIR;'
      VAR: ASNOW
      METPLUSTOOLNAME: 'GENENSPROD'
      OBTYPE: 'NOHRSC'
      FCST_LEVEL: 'A#ACCUM_HH#'
      FCST_THRESH: 'all'
    dependency:
      and:
        metataskdep_pcpcombine_fcst:
          attrs:
            metatask: PcpCombine_fcst_ASNOW#ACCUM_HH#h_all_mems
  task_run_MET_EnsembleStat_vx_ASNOW#ACCUM_HH#h:
    <<: *task_GenEnsProd_NOHRSC
    envars:
      <<: *envars_GenEnsProd_NOHRSC
      METPLUSTOOLNAME: 'ENSEMBLESTAT'
      FCST_THRESH: 'none'
    dependency:
      and:
        taskdep_pcpcombine_obs_nohrsc: &taskdep_pcpcombine_obs_nohrsc
          attrs:
            task: run_MET_PcpCombine_obs_ASNOW#ACCUM_HH#h_NOHRSC
        taskdep_genensprod:
          attrs:
            task: run_MET_GenEnsProd_vx_ASNOW#ACCUM_HH#h

metatask_GenEnsProd_EnsembleStat_MRMS:
  var:
    VAR: '{% for var in verification.VX_FIELDS %}{% if var in ["REFC", "RETOP"] %}{{ "%s " % var }}{% endif %}{% endfor %}'
  task_run_MET_GenEnsProd_vx_#VAR#: &task_GenEnsProd_MRMS
    <<: *default_task_verify_ens
    command: '&LOAD_MODULES_RUN_TASK; "run_vx" "&JOBSdir;/JREGIONAL_RUN_MET_GENENSPROD_OR_ENSEMBLESTAT"'
    envars: &envars_GenEnsProd_MRMS
      <<: *default_vars
      ACCUM_HH: '01'
      OBS_DIR: '&MRMS_OBS_DIR;'
      VAR: '#VAR#'
      METPLUSTOOLNAME: 'GENENSPROD'
      OBTYPE: 'MRMS'
      FCST_LEVEL: 'L0'
      FCST_THRESH: 'all'
    dependency:
      and:
        metataskdep_check_post_output: &check_post_output
          attrs:
            metatask: check_post_output_all_mems
  task_run_MET_EnsembleStat_vx_#VAR#:
    <<: *task_GenEnsProd_MRMS
    envars:
      <<: *envars_GenEnsProd_MRMS
      METPLUSTOOLNAME: 'ENSEMBLESTAT'
      FCST_LEVEL: 'L0'
      FCST_THRESH: 'none'
    dependency:
      and:
        datadep_all_get_obs_mrms_complete: &all_get_obs_mrms_complete
          attrs:
            age: 00:00:00:30
          # Check that the flag files that indicate that the get_obs_mrms tasks
          # are complete are all present before launching any EnsembleStat task.
          text: '{%- set num_obs_days = workflow.OBS_DAYS_ALL_CYCLES_INST|length %}
                 {%- set indent = "      " %}
                 {%- set indent_p2 = indent + "  " %}
                 {%- for n in range(0, num_obs_days) %}
                   {%- set yyyymmdd = workflow.OBS_DAYS_ALL_CYCLES_INST[n] %}
                   {%- if n == 0 %}
                     {{- workflow.WFLOW_FLAG_FILES_DIR ~ "/get_obs_mrms_" ~ yyyymmdd ~ "_complete.txt" }}
                   {%- else %}
                     {{- indent ~ "</datadep>\n" }}
                     {{- indent ~ "<datadep age=\"00:00:00:30\">\n" }}
                     {{- indent_p2 ~ workflow.WFLOW_FLAG_FILES_DIR ~ "/get_obs_mrms_" ~ yyyymmdd ~ "_complete.txt" }}
                   {%- endif %}
                   {%- if n != num_obs_days-1 %} {{- "\n" }} {%- endif %}
                 {%- endfor %}'
        taskdep_genensprod:
          attrs:
            task: run_MET_GenEnsProd_vx_#VAR#

metatask_GenEnsProd_EnsembleStat_NDAS:
  var:
    VAR: '{% for var in verification.VX_FIELDS %}{% if var in ["ADPSFC", "ADPUPA"] %}{{ "%s " % var }}{% endif %}{% endfor %}'
  task_run_MET_GenEnsProd_vx_#VAR#: &task_GenEnsProd_NDAS
    <<: *default_task_verify_ens
    command: '&LOAD_MODULES_RUN_TASK; "run_vx" "&JOBSdir;/JREGIONAL_RUN_MET_GENENSPROD_OR_ENSEMBLESTAT"'
    envars: &envars_GenEnsProd_NDAS
      <<: *default_vars
      OBS_DIR: '&NDAS_OBS_DIR;'
      VAR: '#VAR#'
      METPLUSTOOLNAME: 'GENENSPROD'
      OBTYPE: 'NDAS'
      ACCUM_HH: '01'
      FCST_LEVEL: 'all'
      FCST_THRESH: 'all'
    walltime: 02:30:00
    dependency:
      metataskdep_check_post_output:
         <<: *check_post_output
  task_run_MET_EnsembleStat_vx_#VAR#:
    <<: *task_GenEnsProd_NDAS
    envars:
      <<: *envars_GenEnsProd_NDAS
      METPLUSTOOLNAME: 'ENSEMBLESTAT'
    walltime: 01:00:00
    dependency:
      and:
        datadep_all_pb2nc_obs_ndas_complete: &all_pb2nc_obs_ndas_complete
          attrs:
            age: 00:00:00:30
          # Check that the flag files that indicate that the Pb2NC tasks are
          # complete are all present before launching any EnsembleStat task.
          text: '{%- set num_obs_days = workflow.OBS_DAYS_ALL_CYCLES_INST|length %}
                 {%- set indent = "      " %}
                 {%- set indent_p2 = indent + "  " %}
                 {%- for n in range(0, num_obs_days) %}
                   {%- set yyyymmdd = workflow.OBS_DAYS_ALL_CYCLES_INST[n] %}
                   {%- if n == 0 %}
                     {{- workflow.WFLOW_FLAG_FILES_DIR ~ "/run_met_pb2nc_obs_ndas_" ~ yyyymmdd ~ "_complete.txt" }}
                   {%- else %}
                     {{- indent ~ "</datadep>\n" }}
                     {{- indent ~ "<datadep age=\"00:00:00:30\">\n" }}
                     {{- indent_p2 ~ workflow.WFLOW_FLAG_FILES_DIR ~ "/run_met_pb2nc_obs_ndas_" ~ yyyymmdd ~ "_complete.txt" }}
                   {%- endif %}
                   {%- if n != num_obs_days-1 %} {{- "\n" }} {%- endif %}
                 {%- endfor %}'
        taskdep_genensprod:
          attrs:
            task: run_MET_GenEnsProd_vx_#VAR#

metatask_GridStat_CCPA_ensmeanprob_all_accums:
  var:
    stat: MEAN PROB
    statlc: mean prob
  metatask_GridStat_CCPA_ens#statlc#_all_accums:
    var:
      ACCUM_HH: '{% for ah in verification.VX_APCP_ACCUMS_HRS %}{% if workflow.FCST_LEN_HRS >= ah %}{{ "%02d " % ah }}{% endif %}{% endfor %}'
    task_run_MET_GridStat_vx_ens#statlc#_APCP#ACCUM_HH#h:
      <<: *default_task_verify_ens
      command: '&LOAD_MODULES_RUN_TASK; "run_vx" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_OR_POINTSTAT_VX_ENS#stat#"'
      envars:
        <<: *default_vars
        OBS_DIR: '&CCPA_OBS_DIR;'
        VAR: APCP
        METPLUSTOOLNAME: 'GRIDSTAT'
        OBTYPE: 'CCPA'
        ACCUM_HH: '#ACCUM_HH#'
        FCST_LEVEL: 'A#ACCUM_HH#'
        FCST_THRESH: 'all'
      dependency:
        and:
          taskdep_pcpcombine_obs_ccpa:
            <<: *taskdep_pcpcombine_obs_ccpa
          taskdep_genensprod:
            attrs:
              task: run_MET_GenEnsProd_vx_APCP#ACCUM_HH#h

metatask_GridStat_NOHRSC_ensmeanprob_all_accums:
  var:
    stat: MEAN PROB
    statlc: mean prob
  metatask_GridStat_NOHRSC_ens#statlc#_all_accums:
    var:
      ACCUM_HH: '{% for ah in verification.VX_ASNOW_ACCUMS_HRS %}{% if workflow.FCST_LEN_HRS >= ah %}{{ "%02d " % ah }}{% endif %}{% endfor %}'
    task_run_MET_GridStat_vx_ens#statlc#_ASNOW#ACCUM_HH#h:
      <<: *default_task_verify_ens
      command: '&LOAD_MODULES_RUN_TASK; "run_vx" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_OR_POINTSTAT_VX_ENS#stat#"'
      envars:
        <<: *default_vars
        OBS_DIR: '&NOHRSC_OBS_DIR;'
        VAR: ASNOW
        METPLUSTOOLNAME: 'GRIDSTAT'
        OBTYPE: 'NOHRSC'
        ACCUM_HH: '#ACCUM_HH#'
        FCST_LEVEL: 'A#ACCUM_HH#'
        FCST_THRESH: 'all'
      dependency:
        and:
          taskdep_pcpcombine_obs_nohrsc:
            <<: *taskdep_pcpcombine_obs_nohrsc
          taskdep_genensprod:
            attrs:
              task: run_MET_GenEnsProd_vx_ASNOW#ACCUM_HH#h

metatask_GridStat_MRMS_ensprob:
  var:
    VAR: '{% for var in verification.VX_FIELDS %}{% if var in ["REFC", "RETOP"] %}{{ "%s " % var }}{% endif %}{% endfor %}'
  task_run_MET_GridStat_vx_ensprob_#VAR#:
    <<: *default_task_verify_ens
    command: '&LOAD_MODULES_RUN_TASK; "run_vx" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_OR_POINTSTAT_VX_ENSPROB"'
    envars:
      <<: *default_vars
      ACCUM_HH: '01'
      OBS_DIR: '&MRMS_OBS_DIR;'
      VAR: '#VAR#'
      METPLUSTOOLNAME: 'GRIDSTAT'
      OBTYPE: 'MRMS'
      FCST_LEVEL: 'L0'
      FCST_THRESH: 'all'
    dependency:
      and:
        datadep_all_get_obs_mrms_complete:
          <<: *all_get_obs_mrms_complete
        taskdep_genensprod:
          attrs:
            task: run_MET_GenEnsProd_vx_#VAR#

metatask_PointStat_NDAS_ensmeanprob:
  var:
    stat: MEAN PROB
    statlc: mean prob
  metatask_PointStat_NDAS_ens#statlc#:
    var:
      VAR: '{% for var in verification.VX_FIELDS %}{% if var in ["ADPSFC", "ADPUPA"] %}{{ "%s " % var }}{% endif %}{% endfor %}'
    task_run_MET_PointStat_vx_ens#statlc#_#VAR#:
      <<: *default_task_verify_ens
      command: '&LOAD_MODULES_RUN_TASK; "run_vx" "&JOBSdir;/JREGIONAL_RUN_MET_GRIDSTAT_OR_POINTSTAT_VX_ENS#stat#"'
      envars:
        <<: *default_vars
        OBS_DIR: '&NDAS_OBS_DIR;'
        VAR: '#VAR#'
        METPLUSTOOLNAME: 'POINTSTAT'
        OBTYPE: 'NDAS'
        ACCUM_HH: '01'
        FCST_LEVEL: 'all'
        FCST_THRESH: 'all'
      dependency:
        and:
          datadep_all_pb2nc_obs_ndas_complete:
            <<: *all_pb2nc_obs_ndas_complete
          taskdep_genensprod:
            attrs:
              task: run_MET_GenEnsProd_vx_#VAR#
