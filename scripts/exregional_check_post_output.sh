#!/usr/bin/env bash

#
#-----------------------------------------------------------------------
#
# The ex-script for checking the post output.
#
# Run-time environment variables:
#
#    ACCUM_HH
#    CDATE
#    ENSMEM_INDX
#    GLOBAL_VAR_DEFNS_FP
#    VAR
#
# Experiment variables
#
#  user:
#    USHdir
#
#  workflow:
#    FCST_LEN_HRS
#
#  global:
#    DO_ENSEMBLE
#    ENS_TIME_LAG_HRS
#
#  verification:
#    FCST_FN_TEMPLATE
#    FCST_SUBDIR_TEMPLATE
#    NUM_MISSING_FCST_FILES_MAX
#    VX_FCST_INPUT_BASEDIR
#    VX_NDIGITS_ENSMEM_NAMES
#
#  constants:
#    SECS_PER_HOUR
#
#-----------------------------------------------------------------------
#

#
#-----------------------------------------------------------------------
#
# Source the variable definitions file and the bash utility functions.
#
#-----------------------------------------------------------------------
#
. $USHdir/source_util_funcs.sh
for sect in user nco workflow global verification constants task_run_post ; do
  source_yaml ${GLOBAL_VAR_DEFNS_FP} ${sect}
done
#
#-----------------------------------------------------------------------
#
# Source files defining auxiliary functions for verification.
#
#-----------------------------------------------------------------------
#
. $USHdir/set_leadhrs.sh
#
#-----------------------------------------------------------------------
#
# Save current shell options (in a global array).  Then set new options
# for this script/function.
#
#-----------------------------------------------------------------------
#
{ save_shell_opts; . $USHdir/preamble.sh; } > /dev/null 2>&1
#
#-----------------------------------------------------------------------
#
# Get the full path to the file in which this script/function is located
# (scrfunc_fp), the name of that file (scrfunc_fn), and the directory in
# which the file is located (scrfunc_dir).
#
#-----------------------------------------------------------------------
#
scrfunc_fp=$( $READLINK -f "${BASH_SOURCE[0]}" )
scrfunc_fn=$( basename "${scrfunc_fp}" )
scrfunc_dir=$( dirname "${scrfunc_fp}" )
#
#-----------------------------------------------------------------------
#
# Print message indicating entry into script.
#
#-----------------------------------------------------------------------
#
print_info_msg "
========================================================================
Entering script:  \"${scrfunc_fn}\"
In directory:     \"${scrfunc_dir}\"

This is the ex-script for the task that checks that no more than
NUM_MISSING_FCST_FILES_MAX of each forecast's (ensemble member's) post-
processed output files are missing.  Note that such files may have been
generated by UPP as part of the current SRW App workflow, or they may be
user-staged. 
========================================================================"
#
#-----------------------------------------------------------------------
#
# Get the time lag for the current ensemble member.
#
#-----------------------------------------------------------------------
#
i="0"
if [[ $(boolify "${DO_ENSEMBLE}") == "TRUE" ]]; then
  i=$( bc -l <<< "${ENSMEM_INDX}-1" )
fi
time_lag=$( bc -l <<< "${ENS_TIME_LAG_HRS[$i]}*${SECS_PER_HOUR}" )
#
#-----------------------------------------------------------------------
#
# Check to ensure that all the expected post-processed forecast output
# files are present on disk.  This is done by the set_leadhrs function
# below.  Note that CDATE (in YYYYMMDDHH format) is already available via
# the call to the job_preamble.sh script in the j-job of this ex-script.
#
#-----------------------------------------------------------------------
#
ensmem_indx=$(printf "%0${VX_NDIGITS_ENSMEM_NAMES}d" $(( 10#${ENSMEM_INDX})))
ensmem_name="mem${ensmem_indx}"
FCST_INPUT_FN_TEMPLATE=$( eval echo ${FCST_SUBDIR_TEMPLATE:+${FCST_SUBDIR_TEMPLATE}/}${FCST_FN_TEMPLATE} )

set_leadhrs \
  yyyymmddhh_init="${CDATE}" \
  lhr_min="0" \
  lhr_max="${FCST_LEN_HRS}" \
  lhr_intvl="${VX_FCST_OUTPUT_INTVL_HRS}" \
  base_dir="${VX_FCST_INPUT_BASEDIR}" \
  fn_template="${FCST_INPUT_FN_TEMPLATE}" \
  num_missing_files_max="${NUM_MISSING_FCST_FILES_MAX}" \
  outvarname_lhrs_list="FHR_LIST"
#
#-----------------------------------------------------------------------
#
# Print message indicating successful completion of script.
#
#-----------------------------------------------------------------------
#
print_info_msg "
========================================================================
Done checking for existence of post-processed files for ensemble member ${ENSMEM_INDX}.

Exiting script:  \"${scrfunc_fn}\"
In directory:    \"${scrfunc_dir}\"
========================================================================"
#
#-----------------------------------------------------------------------
#
# Restore the shell options saved at the beginning of this script/func-
# tion.
#
#-----------------------------------------------------------------------
#
{ restore_shell_opts; } > /dev/null 2>&1
